{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","records","setRecords","videoElement","useRef","startButtonElement","stopButtonElement","shouldRecordRef","modelRef","recordingRef","lastDetectionsRef","recorderRef","detectFrame","_detectFrame","apply","this","arguments","asyncToGenerator","regenerator_default","a","mark","_callee2","predictions","foundPhone","i","wrap","_context2","prev","next","current","stopRecording","abrupt","detect","sent","length","class","startRecording","push","filter","Boolean","slice","Math","max","requestAnimationFrame","stop","console","log","MediaRecorder","window","stream","ondataavailable","e","title","Date","href","URL","createObjectURL","data","previousRecords","concat","toConsumableArray","start","useEffect","_prepare","_callee","model","_context","setAttribute","navigator","mediaDevices","getUserMedia","audio","video","srcObject","cocoSsd","removeAttribute","t0","error","prepare","react_default","createElement","className","autoPlay","playsInline","muted","ref","role","onClick","map","record","key","id","width","height","controls","src","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d2d9769d.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nimport * as cocoSsd from \"@tensorflow-models/coco-ssd\";\nimport \"@tensorflow/tfjs\";\n\nconst App = () => {\n  const [records, setRecords] = useState([]);\n\n  const videoElement = useRef(null);\n  const startButtonElement = useRef(null);\n  const stopButtonElement = useRef(null);\n\n  const shouldRecordRef = useRef(false);\n  const modelRef = useRef(null);\n  const recordingRef = useRef(false);\n  const lastDetectionsRef = useRef([]);\n  const recorderRef = useRef(null);\n\n  useEffect(() => {\n    async function prepare() {\n      startButtonElement.current.setAttribute(\"disabled\", true);\n      stopButtonElement.current.setAttribute(\"disabled\", true);\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: true\n          });\n          window.stream = stream;\n          videoElement.current.srcObject = stream;\n          const model = await cocoSsd.load();\n\n          modelRef.current = model;\n          startButtonElement.current.removeAttribute(\"disabled\");\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    prepare();\n  }, []);\n\n  async function detectFrame() {\n    if (!shouldRecordRef.current) {\n      stopRecording();\n      return;\n    }\n\n    const predictions = await modelRef.current.detect(videoElement.current);\n\n    let foundPhone = false;\n    for (let i = 0; i < predictions.length; i++) {\n      if (predictions[i].class === \"cell phone\") {\n        foundPhone = true;\n      }\n    }\n\n    if (foundPhone) {\n      startRecording();\n      lastDetectionsRef.current.push(true);\n    } else if (lastDetectionsRef.current.filter(Boolean).length) {\n      startRecording();\n      lastDetectionsRef.current.push(false);\n    } else {\n      stopRecording();\n    }\n\n    lastDetectionsRef.current = lastDetectionsRef.current.slice(\n      Math.max(lastDetectionsRef.current.length - 10, 0)\n    );\n\n    requestAnimationFrame(() => {\n      detectFrame();\n    });\n  }\n\n  function startRecording() {\n    if (recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = true;\n    console.log(\"start recording\");\n\n    recorderRef.current = new MediaRecorder(window.stream);\n\n    recorderRef.current.ondataavailable = function (e) {\n      const title = new Date() + \"\";\n      const href = URL.createObjectURL(e.data);\n      setRecords((previousRecords) => {\n        return [...previousRecords, { href, title }];\n      });\n    };\n\n    recorderRef.current.start();\n  }\n\n  function stopRecording() {\n    if (!recordingRef.current) {\n      return;\n    }\n\n    recordingRef.current = false;\n    recorderRef.current.stop();\n    console.log(\"stopped recording\");\n    lastDetectionsRef.current = [];\n  }\n\n  return (\n    <div className=\"p-3\">\n      <div>\n        <video autoPlay playsInline muted ref={videoElement} />\n      </div>\n      <div>\n        <div className=\"btn-toolbar\" role=\"toolbar\">\n          <div className=\"btn-group mr-2\" role=\"group\">\n            <button\n              className=\"btn btn-success\"\n              onClick={() => {\n                shouldRecordRef.current = true;\n                stopButtonElement.current.removeAttribute(\"disabled\");\n                startButtonElement.current.setAttribute(\"disabled\", true);\n                detectFrame();\n              }}\n              ref={startButtonElement}\n            >\n              Start\n            </button>\n          </div>\n          <div className=\"btn-group mr-2\" role=\"group\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => {\n                shouldRecordRef.current = false;\n                startButtonElement.current.removeAttribute(\"disabled\");\n                stopButtonElement.current.setAttribute(\"disabled\", true);\n                stopRecording();\n              }}\n              ref={stopButtonElement}\n            >\n              Stop\n            </button>\n          </div>\n        </div>\n        <div className=\"row p-3\">\n          <h3>Records:</h3>\n          {!records.length\n            ? null\n            : records.map((record) => {\n                return (\n                  <div className=\"card mt-3 w-100\" key={record.title}>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{record.title}</h5>\n                      <video\n                        id=\"playerVideo\"\n                        width=\"450px\"\n                        height=\"338px\"\n                        controls\n                        src={record.href}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}